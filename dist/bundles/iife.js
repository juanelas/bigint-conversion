var bigintConversion=function(e){"use strict";function t(e,t=!1,n=!0){let r="";r=(e=>{const t=[];for(let n=0;n<e.length;n+=32768)t.push(String.fromCharCode.apply(null,e.subarray(n,n+32768)));return btoa(t.join(""))})("string"==typeof e?(new TextEncoder).encode(e):new Uint8Array(e));return t&&(r=function(e){return e.replace(/\+/g,"-").replace(/\//g,"_")}(r)),n||(r=r.replace(/=/g,"")),r}function n(e,t=!1){{let n=!1;if(/^[0-9a-zA-Z_-]+={0,2}$/.test(e))n=!0;else if(!/^[0-9a-zA-Z+/]*={0,2}$/.test(e))throw new Error("Not a valid base64 input");n&&(e=e.replace(/-/g,"+").replace(/_/g,"/").replace(/=/g,""));const r=new Uint8Array(atob(e).split("").map((e=>e.charCodeAt(0))));return t?(new TextDecoder).decode(r):r}}function r(e,t=!1,n){const r=e.match(/^(0x)?([\da-fA-F]+)$/);if(null==r)throw new RangeError("input must be a hexadecimal string, e.g. '0x124fe3a' or '0214f1b2'");let o=r[2];if(void 0!==n){if(n<o.length/2)throw new RangeError(`expected byte length ${n} < input hex byte length ${Math.ceil(o.length/2)}`);o=o.padStart(2*n,"0")}return t?"0x"+o:o}function o(e,t=!1){if(e<0)throw RangeError("a should be a non-negative integer. Negative values are not supported");return l(a(e),t)}function i(e){let t=8n;ArrayBuffer.isView(e)?t=BigInt(8*e.BYTES_PER_ELEMENT):e=new Uint8Array(e);let n=0n;for(const r of e.values()){n=(n<<t)+BigInt(r)}return n}function a(e,t=!1,n){if(e<0)throw RangeError("a should be a non-negative integer. Negative values are not supported");return e.toString(16)}function u(e){return BigInt(r(e,!0))}function f(e){return(new TextDecoder).decode(new Uint8Array(e))}function c(e,t=!1){return(new TextEncoder).encode(e).buffer}function g(e,t=!1,n){{let o="";const i="0123456789abcdef";return(e=ArrayBuffer.isView(e)?new Uint8Array(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)):new Uint8Array(e)).forEach((e=>{o+=i[e>>4]+i[15&e]})),r(o,t,n)}}function l(e,t=!1){let n=r(e);return n=r(e,!1,Math.ceil(n.length/2)),Uint8Array.from(n.match(/[\da-fA-F]{2}/g).map((e=>parseInt(e,16)))).buffer}return e.base64ToBigint=function(e){return i(n(e))},e.bigintToBase64=function(e,n=!1,r=!0){return t(o(e),n,r)},e.bigintToBuf=o,e.bigintToHex=a,e.bigintToText=function(e){if(e<0)throw RangeError("a should be a non-negative integer. Negative values are not supported");return f(l(e.toString(16)))},e.bufToBigint=i,e.bufToHex=g,e.bufToText=f,e.hexToBigint=u,e.hexToBuf=l,e.parseHex=r,e.textToBigint=function(e){return u(g(c(e)))},e.textToBuf=c,Object.defineProperty(e,"__esModule",{value:!0}),e}({});
