function n(n,t=!1){return a(r(n),t)}function t(n){let t=8n;ArrayBuffer.isView(n)?t=BigInt(8*n.BYTES_PER_ELEMENT):n=new Uint8Array(n);let r=0n;for(const e of n.values()){r=(r<<t)+BigInt(e)}return r}function r(n){return n.toString(16)}function e(n){return BigInt("0x"+n)}function f(n){return u(a(n.toString(16)))}function i(n){return e(c(o(n)))}function u(n){return(new TextDecoder).decode(new Uint8Array(n))}function o(n,t=!1){return(new TextEncoder).encode(n).buffer}function c(n){{let t="";const r="0123456789abcdef";return(n=ArrayBuffer.isView(n)?new Uint8Array(n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)):new Uint8Array(n)).forEach(n=>{t+=r[n>>4]+r[15&n]}),t}}function a(n,t=!1){return n=n.length%2?"0"+n:n,Uint8Array.from(n.trimLeft("0x").match(/[\da-f]{2}/gi).map(n=>parseInt(n,16))).buffer}export{n as bigintToBuf,r as bigintToHex,f as bigintToText,t as bufToBigint,c as bufToHex,u as bufToText,e as hexToBigint,a as hexToBuf,i as textToBigint,o as textToBuf};
